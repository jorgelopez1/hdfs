name: {{FRAMEWORK_NAME}}
scheduler:
  principal: {{SERVICE_PRINCIPAL}}
  user: {{TASKCFG_ALL_TASK_USER}}
pods:
  name:
    count: 1
    uris:
      - {{HDFS_URI}}
      - {{HDFS_BIN_URI}}
      - {{HDFS_JAVA_URI}}
      - {{BOOTSTRAP_URI}}
      {{#KEYTABS_URI}}- {{KEYTABS_URI}}{{/KEYTABS_URI}}
    {{#ENABLE_VIRTUAL_NETWORK}}
    networks:
      {{VIRTUAL_NETWORK_NAME}}:
        labels: {{VIRTUAL_NETWORK_PLUGIN_LABELS}}
    {{/ENABLE_VIRTUAL_NETWORK}}
    resource-sets:
      name-resources:
        cpus: {{NAME_CPUS}}
        memory: {{NAME_MEM}}
        volume:
          path: name-data
          size: {{NAME_DISK}}
          type: {{NAME_DISK_TYPE}}
        ports:
          name-rpc:
            port: {{TASKCFG_ALL_NAME_NODE_RPC_PORT}}
          name-http:
            port: {{TASKCFG_ALL_NAME_NODE_HTTP_PORT}}
          {{#TLS_ENABLED}}
          name-https:
            port: {{TASKCFG_ALL_NAME_NODE_HTTPS_PORT}}
          {{/TLS_ENABLED}}
      
    tasks:
      node:
        goal: RUNNING
        cmd: >
              export JAVA_HOME=$(ls -d $MESOS_SANDBOX/jre*/) ;
              mv hdfs {{HDFS_VERSION}}/bin/ ;
              ./bootstrap && ./{{HDFS_VERSION}}/bin/hdfs namenode
        resource-set: name-resources
        readiness-check:
          cmd: export JAVA_HOME=$(ls -d $MESOS_SANDBOX/jre*/) && ./{{HDFS_VERSION}}/bin/hdfs haadmin -getServiceState name-$POD_INSTANCE_INDEX-node
          interval: 5
          delay: 0
          timeout: 60
        configs:
          {{#KRB5_CONF_URI}}
          krb5-conf:
            template: {{MESOS_SANDBOX}}/krb5.conf
            dest: {{JRE_VERSION}}/lib/security/krb5.conf
          {{/KRB5_CONF_URI}}
          core-site:
            template: core-site.xml
            dest: {{HDFS_VERSION}}/etc/hadoop/core-site.xml
          hdfs-site:
            template: hdfs-site.xml
            dest: {{HDFS_VERSION}}/etc/hadoop/hdfs-site.xml
          hadoop-metrics2:
            template: name-hadoop-metrics2.properties
            dest: {{HDFS_VERSION}}/etc/hadoop/hadoop-metrics2.properties
          {{#TLS_ENABLED}}
          ssl-server:
            template: ssl-server.xml
            dest: {{HDFS_VERSION}}/etc/hadoop/ssl-server.xml
          ssl-client:
            template: ssl-client.xml
            dest: {{HDFS_VERSION}}/etc/hadoop/ssl-client.xml
          {{/TLS_ENABLED}}
        env:
          NAMENODE: true
        {{#TLS_ENABLED}}
        transport-encryption:
          - name: node
            type: KEYSTORE
        {{/TLS_ENABLED}}
      format:
        goal: FINISHED
        cmd: >
              export JAVA_HOME=$(ls -d $MESOS_SANDBOX/jre*/) ;
              mv hdfs {{HDFS_VERSION}}/bin/ ;
              ./bootstrap && ./{{HDFS_VERSION}}/bin/hdfs namenode -format
        resource-set: name-resources
        
      
        
  data:
    count: {{DATA_COUNT}}
    uris:
      - {{HDFS_URI}}
      - {{HDFS_BIN_URI}}
      - {{HDFS_JAVA_URI}}
      - {{BOOTSTRAP_URI}}
      {{#KEYTABS_URI}}- {{KEYTABS_URI}}{{/KEYTABS_URI}}
    {{#ENABLE_VIRTUAL_NETWORK}}
    networks:
      {{VIRTUAL_NETWORK_NAME}}:
        labels: {{VIRTUAL_NETWORK_PLUGIN_LABELS}}
      {{/ENABLE_VIRTUAL_NETWORK}}
    tasks:
      node:
        goal: RUNNING
        cmd: >
              export JAVA_HOME=$(ls -d $MESOS_SANDBOX/jre*/) ;
              mv hdfs {{HDFS_VERSION}}/bin/ ;
              ./bootstrap && ./{{HDFS_VERSION}}/bin/hdfs datanode
        cpus: {{DATA_CPUS}}
        memory: {{DATA_MEM}}
        ports:
          data-rpc:
            port: {{TASKCFG_ALL_DATA_NODE_RPC_PORT}}
          data-http:
            port: {{TASKCFG_ALL_DATA_NODE_HTTP_PORT}}
          {{#TLS_ENABLED}}
          data-https:
            port: {{TASKCFG_ALL_DATA_NODE_HTTPS_PORT}}
          {{/TLS_ENABLED}}
          data-ipc:
            port: {{TASKCFG_ALL_DATA_NODE_IPC_PORT}}
        volume:
          path: data-data
          size: {{DATA_DISK}}
          type: {{DATA_DISK_TYPE}}
        configs:
          {{#KRB5_CONF_URI}}
          krb5-conf:
            template: {{MESOS_SANDBOX}}/krb5.conf
            dest: {{JRE_VERSION}}/lib/security/krb5.conf
          {{/KRB5_CONF_URI}}
          core-site:
            template: core-site.xml
            dest: {{HDFS_VERSION}}/etc/hadoop/core-site.xml
          hdfs-site:
            template: hdfs-site.xml
            dest: {{HDFS_VERSION}}/etc/hadoop/hdfs-site.xml
          hadoop-metrics2:
            template: data-hadoop-metrics2.properties
            dest: {{HDFS_VERSION}}/etc/hadoop/hadoop-metrics2.properties
          {{#TLS_ENABLED}}
          ssl-server:
            template: ssl-server.xml
            dest: {{HDFS_VERSION}}/etc/hadoop/ssl-server.xml
          {{/TLS_ENABLED}}
        env:
          DATANODE: true
        # If HDFS does not report a data node to be live, we don't consider the data node to be ready yet
        # TODO: LIBPROCESS_IP gets overriden to 0.0.0.0 in overlay networking so this readiness-check needs to be fixed
        readiness-check:
          cmd: export JAVA_HOME=$(ls -d $MESOS_SANDBOX/jre*/) && export TASK_IP=$(./bootstrap --get-task-ip) && MATCH="$(./{{HDFS_VERSION}}/bin/hdfs dfsadmin -report | grep $TASK_IP | wc -l)" && [[ $MATCH -ge 1 ]]
          interval: 10
          delay: 120
          timeout: 60
        {{#TLS_ENABLED}}
        transport-encryption:
          - name: node
            type: KEYSTORE
        {{/TLS_ENABLED}}
plans:
  deploy:
    strategy: serial
    phases:
      
      name:
        strategy: serial
        pod: name
        steps:
          - 0: [[format], [node]]
         
      
      data:
        strategy: {{DEPLOY_STRATEGY}}
        pod: data
  update:
    strategy: serial
    phases:
      
      name:
        strategy: {{UPDATE_STRATEGY}}
        pod: name
        steps:
          - 0: [[node, zkfc]]
          - 1: [[node, zkfc]]
      data:
        strategy: serial
        pod: data

  replace:
    strategy: serial
    phases:
      
      name:
        strategy: serial
        pod: name
        steps:
          - 0: [[bootstrap], [node, zkfc]]
       
